@model IEnumerable<Entities.Entities.Produto>
@{
    ViewBag.Title = "Index";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">
        @TempData["ErrorMessage"]
    </div>
}

<div class="container col-md-12 pt-3 ">

    <div class="row d-flex justify-content-between m-0 col-md-12 ">
        <div style="background:#ffffff; height:100%;padding-left:0px" class="col-md-4">
            <div class="card-body d-flex align-items-center">

                <div style="background:rgba(59,193,247,1); width: 100px; height: 100px; display: flex; justify-content: center; align-items: center;" class="me-3">
                    <span style="font-size: 4rem;" class="fa-solid fa-arrow-up text-white"></span>
                </div>
                <div>
                    <h6 class="card-title">Produto em Maior Quantidade</h6>
                    <h4 class="card-text text-center" id="Produto" style="color:rgba(59,193,247,1)"> </h4>
                </div>
            </div>
        </div>

        <div style="background:#ffffff; height:100%;padding-left:0px" class="col-md-3">
            <div class="card-body d-flex align-items-center">

                <div style="background: #d49c00; width: 100px; height: 100px; display: flex; justify-content: center; align-items: center;" class="me-3">
                    <span style="font-size: 4rem;" class="fa-solid fa-hand-holding-dollar text-white"></span>
                </div>
                <div>

                    <h6 class="card-title">Valor Unitario</h6>
                    <p class="card-text" id="Unitario">R$ 21,00</p>
                </div>
            </div>
        </div>
        <div style="background:#ffffff; height:100%;padding-left:0px" class="col-md-4">
            <div class="card-body d-flex align-items-center">
                <!-- Ícone grande à esquerda -->
                <div style="background:#43bb00; width: 100px; height: 100px; display: flex; justify-content: center; align-items: center;" class="me-3">
                    <span style="font-size: 4rem;" class="fa-duotone fa-solid fa-boxes-stacked text-white"></span>
                </div>
                <div>
                    <h6 class="card-title">Quantidade</h6>
                    <h4 class="card-text " id="Quantidade" style="color:#43bb00"></h4>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container col-md-12 text-center pt-4">

    <table class="table container col-md-12  w-100" id="Tabela">
        <thead>
            <tr>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.CodProduto)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.NomeProduto)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.Estoque)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.CodProduto)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.NomeProduto)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.Estoque)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CodProduto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NomeProduto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estoque)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NomeProduto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estoque)
                    <td>
                        <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editModal" data-url="@Url.Action("Edit", new { id=item.CodProduto , nome=item.NomeProduto})">
                            <i class="fas fa-edit"></i> Editar
                        </button>
                    </td>
                </tr>

            }
        </tbody>
    </table>
</div>
<!-- Modal -->


<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Chegada de Produtos</h5>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="edit" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Saida de Produtos</h5>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>


<script>
    var produtos = @Html.Raw(ViewBag.DadosdoProduto);

    // Itera sobre os produtos com JavaScript
    var nome = produtos.nome;
    var estoque = produtos.Quantidade;
    console.log(estoque);
        // Atualiza os campos do formulário com os valores do produto
        document.getElementById('Produto').innerText = nome;
        document.getElementById('Quantidade').innerText = estoque;



    // Evento ao mostrar o modal de Entrada de Produtos
    var editModal = document.getElementById('editModal');
    editModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var url = button.getAttribute('data-url'); // URL do formulário

        var modalBody = editModal.querySelector('.modal-body');

        // Carrega o conteúdo do formulário via AJAX
        fetch(url)
            .then(response => response.text())
            .then(html => {
                modalBody.innerHTML = html;

                // Após carregar o conteúdo no modal, associar o evento ao campo
                var pressed = modalBody.querySelector('#Convertendovirgula');
                if (pressed) {
                    pressed.addEventListener('input', function (evt) {
                        var valor = pressed.value;
                        // Substitui o ponto por vírgula
                        pressed.value = valor.replace('.', ',');
                    });
                }
            });
    });

    var edit = document.getElementById('edit');
    edit.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var url = button.getAttribute('data-url'); // URL do formulário

        var modalBody = edit.querySelector('.modal-body');

        fetch(url)
            .then(response => response.text())
            .then(html => {
                modalBody.innerHTML = html;
            });
    });

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

