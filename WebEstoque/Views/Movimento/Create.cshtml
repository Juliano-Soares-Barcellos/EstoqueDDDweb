@model Entities.Entities.MovimentoEstoque

@{
    ViewBag.Title = "Create";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="d-flex pt-3">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Produto.NomeProduto, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Produto.NomeProduto, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.Produto.NomeProduto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <Label>Data</Label>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DataMovimentacao, new { @class = "form-control col-md-12", @type = "date" })
                    @Html.ValidationMessageFor(model => model.DataMovimentacao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ValorUnitario, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ValorUnitario, new { htmlAttributes = new { @class = "form-control col-md-12", @id = "Convertendovirgula" } })


                    @Html.ValidationMessageFor(model => model.ValorUnitario, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="d-flex col-md-12 pt-3">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Fornecedor.NomeFornecedor, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fornecedor.NomeFornecedor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fornecedor.NomeFornecedor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div>
                    @Html.HiddenFor(model => model.Fk_tipomovimentacao, new { Value = 1 })
                </div>
            </div>

            <div class="form-group col-md-4 ">
                <div class="d-flex pt-3 ">
                    <button type="submit" value="Create" class="btn btn-primary w-75" id="Criacao">Cadastrar</button>
                </div>
            </div>
        </div>
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

<script>
    console.log("TESTE");

    var pressed = document.getElementById('Convertendovirgula');

    // Adiciona o evento de input no campo de texto
    pressed.addEventListener('input', function (evt) {
        var valor = pressed.value;

        // Substitui qualquer vírgula por ponto
        pressed.value = valor.replace('.', ',');
    });
</script>
